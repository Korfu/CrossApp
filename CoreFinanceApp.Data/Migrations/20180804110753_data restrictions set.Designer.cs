// <auto-generated />
using CoreFinanceApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CoreFinanceApp.Data.Migrations
{
    [DbContext(typeof(CrossFinanceContext))]
    [Migration("20180804110753_data restrictions set")]
    partial class datarestrictionsset
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CoreFinance.Domain.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(11)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CorrespondenceFlatNumber")
                        .HasMaxLength(300);

                    b.Property<string>("CorrespondencePostCode")
                        .HasMaxLength(300);

                    b.Property<string>("CorrespondencePostOfficeCity")
                        .HasMaxLength(300);

                    b.Property<string>("CorrespondenceStreetName")
                        .HasMaxLength(300);

                    b.Property<string>("CorrespondenceStreetNumber")
                        .HasMaxLength(300);

                    b.Property<string>("FlatNumber")
                        .HasMaxLength(300);

                    b.Property<string>("PostCode")
                        .HasMaxLength(300);

                    b.Property<string>("PostOfficeCity")
                        .HasMaxLength(300);

                    b.Property<string>("StreetName")
                        .HasMaxLength(300);

                    b.Property<string>("StreetNumber")
                        .HasMaxLength(300);

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("CoreFinance.Domain.Agreement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(11)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FinancialStateId")
                        .HasMaxLength(11);

                    b.Property<string>("Number")
                        .HasMaxLength(300);

                    b.Property<int>("PersonId")
                        .HasMaxLength(11);

                    b.HasKey("Id");

                    b.HasIndex("FinancialStateId");

                    b.HasIndex("PersonId");

                    b.ToTable("Agreements");
                });

            modelBuilder.Entity("CoreFinance.Domain.FinancialState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(11)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CourtFees")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("Fees")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("Interests")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("OutstandingLiabilities")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("PenaltyInterests")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("RepresentationCourtFees")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("RepresentationVindicationCosts")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("VindicationCosts")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Id");

                    b.ToTable("FinancialStates");
                });

            modelBuilder.Entity("CoreFinance.Domain.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(11)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressId");

                    b.Property<string>("FirstName")
                        .HasMaxLength(300);

                    b.Property<string>("NationalIdentificationNumber")
                        .HasMaxLength(300);

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(300);

                    b.Property<string>("PhoneNumber2")
                        .HasMaxLength(300);

                    b.Property<string>("SecondName")
                        .HasMaxLength(300);

                    b.Property<string>("Surname")
                        .HasMaxLength(300);

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("People");
                });

            modelBuilder.Entity("CoreFinance.Domain.Agreement", b =>
                {
                    b.HasOne("CoreFinance.Domain.FinancialState", "FinancialState")
                        .WithMany("Agreements")
                        .HasForeignKey("FinancialStateId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CoreFinance.Domain.Person", "Person")
                        .WithMany("Agreements")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CoreFinance.Domain.Person", b =>
                {
                    b.HasOne("CoreFinance.Domain.Address", "Address")
                        .WithMany("People")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
