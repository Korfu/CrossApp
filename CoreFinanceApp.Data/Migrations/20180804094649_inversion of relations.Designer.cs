// <auto-generated />
using CoreFinanceApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CoreFinanceApp.Data.Migrations
{
    [DbContext(typeof(CrossFinanceContext))]
    [Migration("20180804094649_inversion of relations")]
    partial class inversionofrelations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CoreFinance.Domain.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CorrespondenceFlatNumber");

                    b.Property<string>("CorrespondencePostCode");

                    b.Property<string>("CorrespondencePostOfficeCity");

                    b.Property<string>("CorrespondenceStreetName");

                    b.Property<string>("CorrespondenceStreetNumber");

                    b.Property<string>("FlatNumber");

                    b.Property<string>("PostCode");

                    b.Property<string>("PostOfficeCity");

                    b.Property<string>("StreetName");

                    b.Property<string>("StreetNumber");

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("CoreFinance.Domain.Agreement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FinancialStateId");

                    b.Property<string>("Number");

                    b.Property<int>("PersonId");

                    b.HasKey("Id");

                    b.HasIndex("FinancialStateId");

                    b.HasIndex("PersonId");

                    b.ToTable("Agreements");
                });

            modelBuilder.Entity("CoreFinance.Domain.FinancialState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CourtFees");

                    b.Property<decimal>("Fees");

                    b.Property<decimal>("Interests");

                    b.Property<decimal>("OutstandingLiabilities");

                    b.Property<decimal>("PenaltyInterests");

                    b.Property<decimal>("RepresentationCourtFees");

                    b.Property<decimal>("RepresentationVindicationCosts");

                    b.Property<decimal>("VindicationCosts");

                    b.HasKey("Id");

                    b.ToTable("FinancialStates");
                });

            modelBuilder.Entity("CoreFinance.Domain.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressId");

                    b.Property<string>("FirstName");

                    b.Property<string>("NationalIdentificationNumber");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("PhoneNumber2");

                    b.Property<string>("SecondName");

                    b.Property<string>("Surname");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("People");
                });

            modelBuilder.Entity("CoreFinance.Domain.Agreement", b =>
                {
                    b.HasOne("CoreFinance.Domain.FinancialState", "FinancialState")
                        .WithMany("Agreements")
                        .HasForeignKey("FinancialStateId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CoreFinance.Domain.Person", "Person")
                        .WithMany("Agreements")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CoreFinance.Domain.Person", b =>
                {
                    b.HasOne("CoreFinance.Domain.Address", "Address")
                        .WithMany("People")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
